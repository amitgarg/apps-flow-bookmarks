{
  "name": "appwise-code-navigator",
  "version": "1.2.0",
  "displayName": "Appwise Code Flows Navigator",
  "description": "vscode extension to create flow-wise bookmarks categorized in apps, helps you navigate and debug large and complex code repositories.",
  "main": "extension.js",
  "engines": {
    "vscode": "^1.74.0"
  },
  "publisher": "AmitKumarGarg",
  "activationEvents": [
    "onCommand:tmp.bookmarks.loadFromApp",
    "onCommand:tmp.bookmarks.initializeForApp",
    "onCommand:tmp.bookmarks.searchFlowsAcross"
  ],
  "extensionDependencies": [
    "DeepakPahawa.flowbookmark"
  ],
  "contributes": {
    "snippets": [
      {
        "language": "json",
        "path": "./snippets/json.json"
      }
    ],
    "configuration": {
      "title": "Appwise Code Flows Navigator",
      "properties": {
        "codeNavigator.projectName": {
          "type": "string",
          "default": "teams-modular-packages",
          "description": "Name of the project to be used to load flows by the extension"
        },
        "codeNavigator.appsDir": {
          "type": "string",
          "default": "packages/apps",
          "description": "Path where all the apps are located in the project (empty string => user will not see predefined app names)"
        },
        "codeNavigator.enableCustomAppNames": {
          "type": "boolean",
          "default": false,
          "description": "Allow user to enter custom app names"
        },
        "codeNavigator.metaDir": {
          "type": "string",
          "default": "packages/apps",
          "description": "Path where all bookmark files will be stored in respective app-name folders"
        },
        "codeNavigator.tagsDir": {
          "type": "string",
          "default": ".vscode",
          "description": "Path where all the tags for the project will be stored"
        },
        "codeNavigator.diagramsDir": {
          "type": "string",
          "default": "docs/flows",
          "description": "Path where all the diagrams will be exported",
          "category": "diagram"
        },
        "codeNavigator.diagramsType": {
          "type": "string",
          "enum": [
            "sequence",
            "gitgraph"
          ],
          "default": "gitgraph",
          "description": "Type of mermaid diagram to be generated",
          "category": "diagram"
        },
        "codeNavigator.showLineNumbers": {
          "type": "boolean",
          "default": true,
          "description": "Show line numbers in diagrams",
          "category": "diagram"
        },
        "codeNavigator.testRunCommand": {
          "type": "string",
          "default": "yarn test:unit ${path:name}",
          "description": "Command to run tests, paths variable will be replaced with space separated list of file paths without extension",
          "category": "test"
        },
        "codeNavigator.testRunCoverageCommand": {
          "type": "string",
          "default": "yarn test:unit:coverage ${path:name}",
          "description": "Command to run tests with coverage, paths variable will be replaced with space separated list of file paths without extension",
          "category": "test"
        },
        "codeNavigator.explainFlowQuery": {
          "type": "string",
          "default": "Given below are all the steps for the given code flow ${flowName} described in format {index}. {filePath}:{lineNumber} {description} in order.\ncan you provide the detailed description for each of the steps mentioned below. you may refer to description of each step for reference. the explaination should be easy to understand for a new team member.focus on function signature, input, output, and the purpose of the function.\n${steps}",
          "description": "Query to be used to get the explanation of the flow from copilot",
          "category": "copilot"
        }
      }
    },
    "commands": [
      {
        "command": "acn.bookmarks.reset",
        "title": "Reset",
        "category": "ACN"
      },
      {
        "command": "acn.bookmarks.loadFromApp",
        "title": "Load Bookmarks from an App",
        "category": "ACN"
      },
      {
        "command": "acn.bookmarks.initializeForApp",
        "title": "Initialize Bookmarks for an App",
        "category": "ACN"
      },
      {
        "command": "acn.bookmarks.manageJoinedBookmarks",
        "title": "Manage Joined Flows for an App",
        "category": "ACN",
        "icon": "$(edit)"
      },
      {
        "command": "acn.bookmarks.saveForApp",
        "title": "Save Bookmarks for App",
        "category": "ACN",
        "icon": "$(save-all)"
      },
      {
        "command": "acn.bookmarks.searchFlowsAcross",
        "title": "Search Flows Across Apps with keywords",
        "category": "ACN"
      },
      {
        "command": "acn.bookmarks.openFileToLine",
        "title": "Open File to Line",
        "icon": "${symbol-class}"
      },
      {
        "command": "acn.bookmarks.openFlow",
        "title": "Render Flow",
        "icon": "$(symbol-class)"
      },
      {
        "command": "acn.bookmarks.diagram",
        "title": "Export Diagram",
        "icon": "$(preview)"
      },
      {
        "command": "acn.bookmarks.copyAppFlow",
        "title": "Copy Json Snippet",
        "icon": "$(json)"
      },
      {
        "command": "acn.bookmarks.removeFlowsFilter",
        "title": "Disable Filter",
        "icon": "$(search-stop)"
      },
      {
        "command": "acn.bookmarks.filterFlows",
        "title": "Filter",
        "icon": "$(search)"
      },
      {
        "command": "acn.bookmarks.reloadFlows",
        "title": "Reload Bookmarks from current App",
        "icon": "$(refresh)"
      },
      {
        "command": "acn.bookmarks.filterBookmarks",
        "title": "Filter",
        "icon": "$(search)"
      },
      {
        "command": "acn.bookmarks.removeBookmarksFilter",
        "title": "Disable Filter",
        "icon": "$(search-stop)"
      },
      {
        "command": "acn.bookmarks.manageTags",
        "title": "Manage Tags",
        "category": "ACN",
        "icon": "$(tag)"
      },
      {
        "command": "acn.bookmarks.manageFlowTags",
        "title": "Manage Tags For Flow",
        "icon": "$(tag)"
      },
      {
        "command": "acn.bookmarks.runTest",
        "title": "Run Test",
        "icon": "$(play)"
      },
      {
        "command": "acn.bookmarks.runTestCoverage",
        "title": "Test Coverage",
        "icon": "$(checklist)"
      },
      {
        "command": "acn.bookmarks.rearrangeBookmarks",
        "title": "Rearrange Bookmarks",
        "icon": "$(list-ordered)"
      },
      {
        "command": "acn.bookmarks.moveBookmark",
        "title": "Move Bookmark",
        "icon": "$(move)"
      },
      {
        "command": "acn.bookmarks.toggleBreakpoints",
        "title": "Toggle Breakpoints for the flow and opens All files",
        "icon": "$(breakpoints-activate)"
      },
      {
        "command": "acn.bookmarks.copilotQuery",
        "title": "Open All files for the flow and copy the copilot query to the clipboard",
        "icon": "$(copilot)"
      }
    ],
    "views": {
      "MCB-explorer": [
        {
          "id": "allFlows",
          "name": "All Flows",
          "icon": "images/fb-bookmark.svg"
        },
        {
          "id": "flowBookmarks",
          "name": "Flow Bookmarks",
          "icon": "images/fb-bookmark.svg"
        },
        {
          "id": "flowFiles",
          "name": "Flow Files",
          "icon": "images/fb-bookmark.svg"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "acn.bookmarks.reloadFlows",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.openFileToLine",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.filterFlows",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.openFlow",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.diagram",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.copyAppFlow",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.removeFlowsFilter",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.filterBookmarks",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.removeBookmarksFilter",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.manageFlowTags",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.runTest",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.runTestCoverage",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.rearrangeBookmarks",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.moveBookmark",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.toggleBreakpoints",
          "when": "false"
        },
        {
          "command": "acn.bookmarks.copilotQuery",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "acn.bookmarks.saveForApp",
          "when": "view == flowBookmarksView && appLoaded == true",
          "showOn": "always",
          "group": "navigation"
        },
        {
          "command": "acn.bookmarks.manageTags",
          "when": "view == allFlows && appWithoutError == true",
          "showOn": "always",
          "group": "navigation"
        },
        {
          "command": "acn.bookmarks.removeFlowsFilter",
          "when": "view == allFlows && allFlows.filter == true",
          "showOn": "always",
          "group": "navigation",
          "order": 1
        },
        {
          "command": "acn.bookmarks.filterFlows",
          "when": "view == allFlows && appLoaded == true",
          "showOn": "always",
          "group": "navigation",
          "order": 2
        },
        {
          "command": "acn.bookmarks.reloadFlows",
          "when": "view == allFlows && appLoaded == true",
          "showOn": "always",
          "group": "navigation",
          "order": 3
        },
        {
          "command": "acn.bookmarks.removeBookmarksFilter",
          "when": "view == flowBookmarks && flowBookmarks.filter == true",
          "showOn": "always",
          "group": "navigation",
          "order": 1
        },
        {
          "command": "acn.bookmarks.filterBookmarks",
          "when": "view == flowBookmarks && appLoaded == true",
          "showOn": "always",
          "group": "navigation",
          "order": 2
        }
      ],
      "view/item/context": [
        {
          "command": "acn.bookmarks.rearrangeBookmarks",
          "when": "view == flowBookmarksView && appLoaded == true && viewItem == flow",
          "group": "inline"
        },
        {
          "command": "acn.bookmarks.moveBookmark",
          "when": "view == flowBookmarksView && appLoaded == true && viewItem == dependency",
          "group": "inline"
        },
        {
          "command": "acn.bookmarks.openFileToLine",
          "group": "navigation",
          "when": "view == flowBookmarks && viewItem == bookmark"
        },
        {
          "command": "acn.bookmarks.toggleBreakpoints",
          "group": "inline",
          "when": "view == flowBookmarks && viewItem == flow"
        },
        {
          "command": "acn.bookmarks.copilotQuery",
          "group": "inline",
          "when": "view == flowBookmarks && viewItem == flow"
        },
        {
          "command": "acn.bookmarks.runTest",
          "group": "inline",
          "when": "view == flowFiles"
        },
        {
          "command": "acn.bookmarks.runTestCoverage",
          "group": "inline",
          "when": "view == flowFiles && viewItem == file"
        },
        {
          "command": "acn.bookmarks.manageJoinedBookmarks",
          "group": "inline",
          "when": "view == allFlows && appLoaded == true && viewItem == manageFlows"
        },
        {
          "command": "acn.bookmarks.manageFlowTags",
          "group": "inline",
          "when": "view == allFlows && viewItem =~ /tag/"
        },
        {
          "command": "acn.bookmarks.openFlow",
          "group": "inline",
          "when": "view == allFlows && viewItem =~ /show/"
        },
        {
          "command": "acn.bookmarks.diagram",
          "group": "inline",
          "when": "view == allFlows && viewItem =~ /diagram/"
        },
        {
          "command": "acn.bookmarks.copyAppFlow",
          "group": "inline",
          "when": "view == allFlows && viewItem =~ /copyJson/"
        },
        {
          "command": "acn.bookmarks.toggleBreakpoints",
          "group": "inline",
          "when": "view == allFlows && viewItem =~ /toggleBreakpoints/"
        },
        {
          "command": "acn.bookmarks.copilotQuery",
          "group": "inline",
          "when": "view == allFlows && viewItem =~ /copilotQuery/"
        }
      ]
    }
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/amitgarg/appwise-code-navigator.git"
  },
  "keywords": [
    "flow",
    "flowwise",
    "bookmark",
    "debug",
    "document",
    "breakpoint",
    "diagram"
  ],
  "categories": [
    "Other"
  ],
  "galleryBanner": {
    "color": "#C80000",
    "theme": "dark"
  },
  "author": {
    "name": "Amit Kumar Garg"
  },
  "bugs": {
    "url": "https://github.com/amitgarg/appwise-code-navigator.git/issues"
  },
  "icon": "images/code-navigator.png",
  "homepage": "https://github.com/amitgarg/appwise-code-navigator.git#readme",
  "license": "SEE LICENSE IN LICENSE"
}
